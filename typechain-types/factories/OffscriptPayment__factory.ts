/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OffscriptPayment,
  OffscriptPaymentInterface,
} from "../OffscriptPayment";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_daiAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdtAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdcAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "oracleDai",
        type: "address",
      },
      {
        internalType: "address",
        name: "oracleEth",
        type: "address",
      },
      {
        internalType: "address",
        name: "oracleUsdt",
        type: "address",
      },
      {
        internalType: "address",
        name: "oracleUsdc",
        type: "address",
      },
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "paymentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "paymentMethod",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "date",
        type: "uint256",
      },
    ],
    name: "Payment",
    type: "event",
  },
  {
    inputs: [],
    name: "_dai",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_usdc",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_usdt",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "checkForNft",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "payWithDai",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "payWithEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "payWithUsdc",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "payWithUsdt",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

type OffscriptPaymentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OffscriptPaymentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OffscriptPayment__factory extends ContractFactory {
  constructor(...args: OffscriptPaymentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _owner: string,
    _daiAddress: string,
    _usdtAddress: string,
    _usdcAddress: string,
    oracleDai: string,
    oracleEth: string,
    oracleUsdt: string,
    oracleUsdc: string,
    nftContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OffscriptPayment> {
    return super.deploy(
      _owner,
      _daiAddress,
      _usdtAddress,
      _usdcAddress,
      oracleDai,
      oracleEth,
      oracleUsdt,
      oracleUsdc,
      nftContract,
      overrides || {}
    ) as Promise<OffscriptPayment>;
  }
  getDeployTransaction(
    _owner: string,
    _daiAddress: string,
    _usdtAddress: string,
    _usdcAddress: string,
    oracleDai: string,
    oracleEth: string,
    oracleUsdt: string,
    oracleUsdc: string,
    nftContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _owner,
      _daiAddress,
      _usdtAddress,
      _usdcAddress,
      oracleDai,
      oracleEth,
      oracleUsdt,
      oracleUsdc,
      nftContract,
      overrides || {}
    );
  }
  attach(address: string): OffscriptPayment {
    return super.attach(address) as OffscriptPayment;
  }
  connect(signer: Signer): OffscriptPayment__factory {
    return super.connect(signer) as OffscriptPayment__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OffscriptPaymentInterface {
    return new utils.Interface(_abi) as OffscriptPaymentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OffscriptPayment {
    return new Contract(address, _abi, signerOrProvider) as OffscriptPayment;
  }
}
